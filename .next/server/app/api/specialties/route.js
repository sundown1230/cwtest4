"use strict";(()=>{var e={};e.id=691,e.ids=[691],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4897:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>x,patchFetch:()=>h,requestAsyncStorage:()=>l,routeModule:()=>c,serverHooks:()=>m,staticGenerationAsyncStorage:()=>d});var s={};t.r(s),t.d(s,{GET:()=>u,dynamic:()=>p});var a=t(9303),i=t(8716),o=t(670),n=t(7070);let p="force-dynamic";async function u(){try{let e=process.env.DB;if(!e)throw Error("D1データベースのバインディングが見つかりません。");let r=e.prepare("SELECT id, name FROM specialties"),{results:t}=await r.all();if(!t)return n.NextResponse.json({error:"診療科情報が見つかりませんでした。"},{status:404});return n.NextResponse.json(t)}catch(e){return console.error("診療科情報取得APIエラー:",e),n.NextResponse.json({error:"診療科情報の取得に失敗しました",message:e instanceof Error?e.message:"不明なエラー"},{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/specialties/route",pathname:"/api/specialties",filename:"route",bundlePath:"app/api/specialties/route"},resolvedPagePath:"C:\\Users\\pasca\\cwtest4\\src\\app\\api\\specialties\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:d,serverHooks:m}=c,x="/api/specialties/route";function h(){return(0,o.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:d})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[276,972],()=>t(4897));module.exports=s})();